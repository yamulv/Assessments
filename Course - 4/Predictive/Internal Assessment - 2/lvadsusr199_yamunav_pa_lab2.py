# -*- coding: utf-8 -*-
"""LVADSUSR199_YamunaV_PA_Lab2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1slsaFch986LYDUWA3VG8SG_-MF6X5RR3
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler, StandardScaler, LabelEncoder
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_score

df = pd.read_csv("/content/drive/MyDrive/Predictive_IA2/Mall_Customers.csv")

df.head()

df.info()

df = df.drop(columns = ['CustomerID'])

df.isnull().sum()

df.columns

df['Annual Income (k$)'] = df['Annual Income (k$)'].fillna(df['Annual Income (k$)'].mean())

df.isnull().sum()

df.duplicated().sum()

for column in df.select_dtypes(include=['int64','float64']).columns:
  q1 = df[column].quantile(0.25)
  q3 = df[column].quantile(0.75)
  iqr = q3 - q1
  l = q1 - 1.5 * iqr
  u = q3 + 1.5 * iqr
  df[column]= df[column].clip(lower=l,upper=u)
  sns.boxplot(x=df[column])
  plt.show()

import warnings
warnings.filterwarnings("ignore")
sse = []
kr = range(1,10)
for k in kr:
  km = KMeans(n_clusters = k)
  km.fit(df[['Age','Spending Score (1-100)']])
  sse.append(km.inertia_)
plt.plot(kr,sse)

km = KMeans(n_clusters = 4)
silhouette_score(df[['Age','Spending Score (1-100)']],km.fit_predict(df[['Age','Spending Score (1-100)']]))

km = KMeans(n_clusters = 4)
pred = km.fit_predict(df[['Age','Spending Score (1-100)']])
df['cluster'] = pred
print(km.cluster_centers_)

df1 = df[df['cluster'] == 0]
df2 = df[df['cluster'] == 1]
df3 = df[df['cluster'] == 2]
df4 = df[df['cluster'] == 3]
plt.scatter(df1['Age'],df1['Spending Score (1-100)'],color="blue")
plt.scatter(df2['Age'],df2['Spending Score (1-100)'],color="red")
plt.scatter(df3['Age'],df3['Spending Score (1-100)'],color="green")
plt.scatter(df4['Age'],df4['Spending Score (1-100)'],color="yellow")
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color= "purple",marker="*",label="centroid")