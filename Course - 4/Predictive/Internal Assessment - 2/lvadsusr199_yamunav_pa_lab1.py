# -*- coding: utf-8 -*-
"""LVADSUSR199_YamunaV_PA_Lab1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mJUXO2bKnbNJ669ortLMjEZgqpwarG3X
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler, StandardScaler, LabelEncoder
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import confusion_matrix, classification_report, accuracy_score

df = pd.read_csv("/content/drive/MyDrive/Predictive_IA2/winequality-red.csv")

df.head()

df.info()

df.describe(include='all').T

df.shape

df.columns

#A
df.isnull().sum()

for column in df.select_dtypes(include=['int64','float64']).columns:
  df[column] = df[column].fillna(df[column].mean())

df.isnull().sum()

for column in df.select_dtypes(include=['int64','float64']).columns:
  q1 = df[column].quantile(0.25)
  q3 = df[column].quantile(0.75)
  iqr = q3 - q1
  l = q1 - 1.5 * iqr
  u = q3 + 1.5 * iqr
  df[column]= df[column].clip(lower=l,upper=u)
  sns.boxplot(x=df[column])
  plt.show()

#B
df.head()

#C
label_encoder = LabelEncoder()
for column in df.select_dtypes(include='object').columns:
  df[column] = label_encoder.fit_transform(df[column])

df.head()

#D
df.duplicated().sum()

df = df.drop_duplicates()

df.duplicated().sum()

X = df.drop(columns = ['quality'])
y = df['quality'].astype("int64")

#E
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size = 0.2, random_state = 42)

#F
model = RandomForestClassifier(n_estimators = 100, random_state = 42)
model.fit(X_train, y_train)

pred = model.predict(X_test)

#G
print("Accuracy score:", accuracy_score(y_test,pred))

print("Classification Report:")
print(classification_report(y_test,pred))

print("Confusion Matrix:")
print(confusion_matrix(y_test,pred))