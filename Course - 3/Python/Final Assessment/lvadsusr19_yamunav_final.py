# -*- coding: utf-8 -*-
"""LVADSUSR19_YamunaV_Final.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13tDpWpOZ7u8CgpDo9A-5enCUzgsjpChc
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""Question 1_a"""

df = pd.read_csv("/content/drive/MyDrive/Final Dataset - IPL.csv")
print(df)

"""Question 1_b"""

print(df.info())

print(df.describe())

print(df.head(5))

print(df.tail(5))

print(df.columns)

print(df.shape)

print(df.dtypes)

print(df.isnull().sum())

print(df.duplicated)

"""Question 2_a"""

print(df.isnull().sum())
# There is no null or missing values in the dataset
# if there is null values, it can be dropped using df.dropna()
# if there is null values, it can be filled with a value using df.fillna(value)

"""Question 2_b"""

print(df.info())

x = df[['date','team1','team2']]
print(x.to_string())

#There are no duplicate rows in this dataset.
#if we want to remove duplicates, we can use df.drop_duplicates()
abc = pd.read_csv("/content/drive/MyDrive/Final Dataset - IPL.csv")
abc.drop_duplicates()
print(abc.info())
print(abc.shape)

"""Question 3_a"""

print(df.info())

mean_score1 = df['first_ings_score'].mean()
print("mean_score1:",mean_score1)
mean_wkts1 = df['first_ings_wkts'].mean()
print("mean_wkts1:",mean_wkts1)
mean_score2 = df['second_ings_score'].mean()
print("mean_score2:",mean_score2)
mean_wkts2 = df['second_ings_wkts'].mean()
print("mean_wkts2:",mean_wkts2)
mean_margin = df['margin'].mean()
print("mean_margin:",mean_margin)
mean_highscore = df['highscore'].mean()
print("mean_highscore:",mean_highscore)

median_score1 = df['first_ings_score'].median()
print("median_score1:",median_score1)
median_wkts1 = df['first_ings_wkts'].median()
print("median_wkts1:",median_wkts1)
median_score2 = df['second_ings_score'].median()
print("median_score2:",median_score2)
median_wkts2 = df['second_ings_wkts'].median()
print("median_wkts2:",median_wkts2)
median_margin = df['margin'].median()
print("median_margin:",median_margin)
median_highscore = df['highscore'].median()
print("median_highscore:",median_highscore)

std_score1 = df['first_ings_score'].std()
print("std_score1:",std_score1)
std_wkts1 = df['first_ings_wkts'].std()
print("std_wkts1:",std_wkts1)
std_score2 = df['second_ings_score'].std()
print("std_score2:",std_score2)
std_wkts2 = df['second_ings_wkts'].std()
print("std_wkts2:",std_wkts2)
std_margin = df['margin'].std()
print("std_margin:",std_margin)
std_highscore = df['highscore'].std()
print("std_highscore:",std_highscore)

var_score1 = df['first_ings_score'].var()
print("var_score1:",var_score1)
var_wkts1 = df['first_ings_wkts'].var()
print("var_wkts1:",var_wkts1)
var_score2 = df['second_ings_score'].var()
print("var_score2:",var_score2)
var_wkts2 = df['second_ings_wkts'].var()
print("var_wkts2:",var_wkts2)
var_margin = df['margin'].var()
print("var_margin:",var_margin)
var_highscore = df['highscore'].var()
print("var_highscore:",var_highscore)

mode_score1 = df['first_ings_score'].mode()
print("mode_score1:",mode_score1)
mode_wkts1 = df['first_ings_wkts'].mode()
print("mode_wkts1:",mode_wkts1)
mode_score2 = df['second_ings_score'].mode()
print("mode_score2:",mode_score2)
mode_wkts2 = df['second_ings_wkts'].mode()
print("mode_wkts2:",mode_wkts2)
mode_margin = df['margin'].mode()
print("mode_margin:",mode_margin)
mode_highscore = df['highscore'].mode()
print("mode_highscore:",mode_highscore)

print(df.describe())

"""Question 4_a"""

print(df.info())

p = df.groupby('venue')['venue'].count()
print(p)
plt.pie(p,autopct= "%1.1f%%")
plt.show()

p = df.groupby('venue')['venue'].count()
print(p)
plt.plot(p.index,p)
plt.xticks(rotation = 90)
plt.show()

p = df.groupby('venue')['venue'].count()
print(p)
plt.bar(p.index,p)
plt.xticks(rotation = 90)
plt.show()

p = df.groupby('venue')['venue'].count()
print(p)
plt.scatter(p.index,p)
plt.xticks(rotation = 90)
plt.show()

"""Question 5_a"""

print(df.info())

n = df[['first_ings_score','first_ings_wkts','second_ings_score','second_ings_wkts','margin','highscore']]
print(n)

n1 = n.corr()
print(n1)

sns.heatmap(n1, annot = True)

"""Question 6_a"""

plt.figure(figsize=(5,5))
sns.boxplot(df['first_ings_score'])

plt.figure(figsize=(5,5))
sns.boxplot(df['first_ings_wkts'])

plt.figure(figsize=(5,5))
sns.boxplot(df['second_ings_score'])

plt.figure(figsize=(5,5))
sns.boxplot(df['second_ings_wkts'])

plt.figure(figsize=(5,5))
sns.boxplot(df['margin'])

plt.figure(figsize=(5,5))
sns.boxplot(df['highscore'])

"""Question 7_a"""

df.info()

df.head(5)

team_win = df.groupby('match_winner')['match_winner'].count()
team_win_w = team_win.sort_values(ascending = False)
print(team_win_w.head(5))

x1 = df.groupby('top_scorer')['top_scorer'].count()
x1_1 = x1.sort_values(ascending=False)
print(x1_1.head(5))

"""Question 8_a"""

print(df.info())

pl = df.groupby('player_of_the_match')['player_of_the_match'].count()
pl_1 = pl.sort_values(ascending=False)
print(pl_1.head(1))

tl = df.groupby('top_scorer')['top_scorer'].count()
tl_1 = tl.sort_values(ascending=False)
print(tl_1.head(1))

w1 = df.groupby('top_scorer')['match_winner'].count()
w1_1 = w1.sort_values(ascending=False)
print(w1_1.head(5))

bl = df.groupby('best_bowling')['best_bowling'].count()
bl_1 = bl.sort_values(ascending=False)
print(bl_1.head(1))

w2 = df.groupby('best_bowling')['match_winner'].count()
w2_1 = w2.sort_values(ascending=False)
print(w2_1.head(5))

"""Question 9_a

Answer:

* Player of the match is Kuldeep Yadav
* Top scorer is Jos Buttler
* Best bowler is Yuzvendra Chahal
"""

plt.figure(figsize=(20,5))
plt.bar(pl_1.index,pl_1)
plt.xticks(rotation = 90)
plt.title("Player of the match")
plt.show()

plt.figure(figsize=(20,5))
plt.bar(tl_1.index,tl_1)
plt.xticks(rotation = 90)
plt.title("Top scorer")
plt.show()

plt.figure(figsize=(20,5))
plt.bar(bl_1.index,bl_1)
plt.xticks(rotation = 90)
plt.title("Best Bowler")
plt.show()